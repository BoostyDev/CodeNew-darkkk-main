---
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import { getLangFromUrl } from '@/i18n/utils';
import { ViewTransitions } from 'astro:transitions';
import ScrollUp from '@/components/ScrollUp.astro';

interface Props {
	title: string;
}

const { title } = Astro.props;
const lang = getLangFromUrl(Astro.url);
import '@fontsource-variable/inter';
import LoadingScreen from '@/components/LoadingScreen.astro';

const description = {
	en: "Partner with us for custom web & software development tailored to your needs - whether its a website or a mobile/web application, we've got you covered.",
	de: "'Arbeiten Sie mit uns zusammen, um maßgeschneiderte Web- und Softwareentwicklung nach Ihren Bedürfnissen zu entwickeln – ob es sich um eine Website oder eine Mobil-/Webanwendung handelt, wir sind für Sie da.",
};
---

<!doctype html>
<html lang={lang} transition:animate='initial'>
	<head>
		<meta charset='UTF-8' />
		<title>{title}</title>
		<meta name='viewport' content='width=device-width' />
		<link rel='icon' type='image/svg+xml' href='/favicon.svg' />
		<meta name='robots' content='index, follow' />
		<meta name='description' content={description[lang]} />

		<!-- Open Graph -->
		<meta property='og:title' content='CodeNew' />
		<meta property='og:type' content='website' />
		<meta property='og:site_name' content='CodeNew' />
		<meta property='og:description' content={description[lang]} />

		<!-- Twitter -->
		<meta name='twitter:card' content='summary_large_image' />
		<meta name='twitter:title' content='CodeNew' />
		<meta name='twitter:description' content={description[lang]} />

		<script src='@/scripts/animations.js'></script>
		<ViewTransitions />
	</head>

	<body>
		<Header />
		<LoadingScreen />
		<ScrollUp />
		<div class='bg-dark-gray z-[1] relative border-b border-slate-800/20'>
			<slot />
		</div>
		<Footer />

		<style is:global>
			html {
				scroll-behavior: smooth;
				--main-color: rgb(79 70 229);
				cursor: url(/cursor.svg), auto;
				color: rgb(15 23 42);
			}
			body {
				font-family: 'Inter Variable', sans-serif;
				background-color: #1c1c1c;
			}
			p {
				color: white;
				font-size: 18px;
				text-wrap: pretty;
			}
			::selection {
				background: var(--main-color);
				color: white;
			}
            h3{
				color: white;
			}
			/* Section ============= */

			.section {
				max-width: 85rem;
				width: 90%;
				margin-inline: auto;
			}

			/* Scroll bar ======== */

			::-webkit-scrollbar {
				width: 11px;
			}

			::-webkit-scrollbar-track {
				background: white;
			}

			::-webkit-scrollbar-thumb {
				background: #282a2b;
				border-radius: 2rem;
				border: 2px solid white;
			}

			::-webkit-scrollbar-thumb:hover {
				background: #454747;
			}
			
			<style is:global>
  html, body {
    margin: 0;
    padding: 0;
    overflow-x: hidden; /* Previene el scroll horizontal */
  }

  #logo3d {
    width: 100%;
    height: auto; /* Permitir que el contenedor ajuste su altura dinámicamente */
    display: flex; /* Usar flexbox para centrar contenido */
    justify-content: center; /* Centrar horizontalmente */
    align-items: center; /* Centrar verticalmente */
    position: relative; /* Asegurar que el posicionamiento sea relativo al contenedor */
    overflow: hidden; /* Evitar contenido fuera de límites */
  }

  canvas {
    max-width: 100%; /* Evitar que el canvas exceda el ancho del contenedor */
    max-height: 100%; /* Evitar que el canvas exceda el alto del contenedor */
    width: 100%; /* Asegurar que ocupe todo el ancho */
    height: 500px; /* Asegurar una altura fija */
    margin: 0 auto; /* Centrar automáticamente */
    z-index: 100; /* Asegurar que esté por encima de otros elementos */
    position: relative;
  }

  @keyframes show {
    0% {
      scale: 100%;
      opacity: 1;
    }
    90% {
      opacity: 1;
    }
    100% {
      scale: 14%;
      opacity: 0;
    }
  }

  canvas {
    animation-timeline: --logo;
    animation-name: show;
    animation-range: 60% normal;
  }
</style>
		</style>
	</body>
</html>
